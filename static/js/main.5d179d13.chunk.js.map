{"version":3,"sources":["logo.svg","components/vehicle/Vehicle.js","components/actions/actionType.js","components/production.js","components/actions/actionCreator.js","components/planet/Planet.js","components/home/Home.js","components/GameOver.js","components/Error.js","components/Loading.js","components/navbar/Navbar.js","components/footer/Footer.js","components/root/Root.js","App.js","serviceWorker.js","components/reducers/appReducer.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","Vehicle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHandler","event","cur_vehicle","parseInt","target","value","updateVehicle","setState","selected_vehicle","state","_this2","vehicles","map","vehicle","index","name","id","val","className","disabled","total_no","distance","max_distance","react_default","a","createElement","key","htmlFor","type","onChange","Component","UPDATE_TIME","ADD_QUANTITY","SUB_QUANTITY","PENDING","ERROR","FULFILLED","SEARCHING","SEARCHED","vehicles_url","planets_url","token_url","find_url","headers","Accept","Content-Type","error","err","payload","status","reset","dispatch","data","planets","time","fetch","then","res","json","getData","fulfilled","catch","findfalcone","method","body","token","JSON","stringify","undefined","console","log","selected","forEach","item","MAX_VEHICLES","Planet","speed","prev_vehicle","addQuantity","updateTime","subQuantity","cur_planet","prev_planet","selected_planet","prevState","planet","Vehicle_Vehicle","connect","ownProps","Home","_Component","findFalcone","planet_names","vehicle_names","store","push","count","inherits","createClass","components_planet_Planet","onClick","Planets_Selected","GameOver","_this$props$store","planet_name","Error","message","Loading","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","Root","isgameOver","isLoading","isError","trim","length","Navbar_Navbar","Loading_Loading","GameOver_GameOver","Error_Error","components_home_Home","Footer_Footer","App","root_Root","Boolean","window","location","hostname","match","initState","increment_by","prev_quantity","new_quantity","toConsumableArray","objectSpread","updatePlanet","appReducer","arguments","action","new_time","middleware","thunk","createStore","applyMiddleware","apply","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d179d13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport './Vehicle.css'\r\nexport default class Vehicle extends Component {\r\n\r\n\r\n    constructor(props){\r\n          super(props);\r\n          this.state = {\r\n                selected_vehicle:-1,\r\n          }\r\n    }\r\n        \r\n     changeHandler = (event)=>{\r\n                const cur_vehicle = parseInt(event.target.value);\r\n                this.props.updateVehicle(cur_vehicle);\r\n                this.setState({selected_vehicle:cur_vehicle})\r\n        }\r\n\r\n\r\n\r\n    render() {        \r\n        const vehicles = this.props.vehicles?this.props.vehicles.map((vehicle,index)=>{\r\n\r\n                         const name = \"vehicle\"+this.props.id\r\n                         const val  = \"\" + index\r\n                         let className = \"radio left\";\r\n                         let disabled  = false;\r\n                        if( (vehicle.total_no==0 || this.props.distance>vehicle.max_distance) && this.state.selected_vehicle!=index){\r\n                            className = className + \" disabled\";\r\n                            disabled  = true;\r\n                        }\r\n                        return (\r\n                                \r\n                            <div key={index} className={className}>\r\n                                <label htmlFor={vehicle.name} >\r\n                                    <input type=\"radio\" name={name} value={val} onChange={this.changeHandler} disabled={disabled} /> \r\n                                      {vehicle.name} ({vehicle.total_no})\r\n                                </label>\r\n                                <br/>\r\n                            </div>\r\n                    )\r\n                        \r\n        }):null;\r\n\r\n        return (\r\n            <div>\r\n                {vehicles}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","export const UPDATE_TIME     = \"UPDATE_TIME\"\r\nexport const ADD_QUANTITY    = \"ADD_QUANTITY\"\r\nexport const SUB_QUANTITY    = \"SUB_QUANTITY\"\r\nexport const FETCH           = \"FETCH\"\r\nexport const PENDING         = 'PENDING'\r\nexport const ERROR           = 'ERROR'\r\nexport const FULFILLED       = 'FULFILLED'\r\nexport const SEARCHING       = 'SEARCHING'\r\nexport const SEARCHED        = 'SEARCHED'\r\n","export const vehicles_url = 'https://findfalcone.herokuapp.com/vehicles';\nexport const planets_url  = 'https://findfalcone.herokuapp.com/planets'; \nexport const token_url    = \"https://findfalcone.herokuapp.com/token\";\nexport const find_url     = \"https://findfalcone.herokuapp.com/find\";\n","import {UPDATE_TIME,ADD_QUANTITY,SUB_QUANTITY,PENDING,FULFILLED,ERROR, SEARCHED,SEARCHING} from './actionType'\r\nimport {vehicles_url,planets_url} from '../production'\r\n\r\n\r\nconst headers = {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n    }\r\n\r\n\r\nexport function addQuantity(index,type){\r\n    return {\r\n        type:ADD_QUANTITY,\r\n        payload:{\r\n            type:type,\r\n            index:index\r\n        }\r\n    }\r\n}\r\nexport function subQuantity(index,type){\r\n    return {\r\n        type:SUB_QUANTITY,\r\n        payload:{\r\n            type:type,\r\n            index:index\r\n        }\r\n    }\r\n}\r\n\r\nexport function searching(){\r\n    return {\r\n        type:SEARCHING,\r\n        payload:{status:'Searching'}\r\n    }\r\n}\r\n\r\nexport function searched(data){\r\n    if(data.status==undefined){ // api doesn't return status in case of error, so add it\r\n        data.status='error'\r\n    }\r\n    return {\r\n        type:SEARCHED,\r\n        payload:data\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function updateTime(val){\r\n    return {\r\n        type:UPDATE_TIME,\r\n        payload:{\r\n            time:val\r\n        }\r\n    }\r\n}\r\n\r\nexport function pending(){\r\n      return {\r\n          type:PENDING,\r\n          payload:{\r\n              status:'Loading'\r\n          }\r\n      }\r\n}\r\n\r\nexport function error(err){\r\n    return {\r\n        type:ERROR,\r\n        payload:{\r\n            status:'error',\r\n            error:err\r\n        }\r\n    }\r\n}\r\n\r\nexport function fulfilled(data){\r\n    return {\r\n        type:FULFILLED,\r\n        payload:data\r\n    }\r\n}\r\n\r\n\r\nexport  function reset(){\r\n    return (dispatch)=>{\r\n            dispatch(pending());  // change status to pending\r\n            const data = {\r\n                    vehicles:[],\r\n                    planets:[],\r\n                    time:0,\r\n                    status:'fulfilled',\r\n                    error:''\r\n            }\r\n            fetch(vehicles_url)\r\n            .then(res=>res.json())\r\n            .then(res=>{ data.vehicles = getData(res,0); return fetch(planets_url)})\r\n            .then(res=>res.json())\r\n            .then(res=>{data.planets = getData(res,false); dispatch(fulfilled(data)) })\r\n            .catch(err=>{dispatch(error(err)) })\r\n        }\r\n    }\r\n\r\n\r\nexport function findfalcone(token_url,find_url,data){\r\n      return (dispatch)=>{\r\n\r\n          dispatch(searching());   // change status to searching\r\n\r\n          fetch(token_url, {\r\n            method: 'POST',\r\n            headers:headers,\r\n            body:''\r\n         } )\r\n        .then(res=>res.json())\r\n        .then((res)=>{ \r\n            data.token=res.token; \r\n            const body = JSON.stringify(data);\r\n\r\n            return fetch(find_url, {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body:body\r\n                } )\r\n        })\r\n        .then(res=>res.json())\r\n        .then((res)=>{dispatch(searched(res))})\r\n        .catch(err=>{ console.log(err); dispatch(error(err)) })\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getData(data,selected){ // add a extra field 'selected' in data to track easily\r\n   data.forEach((item)=>{\r\n       item.selected = selected\r\n   })\r\n   return data;\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport Vehicle from '../vehicle/Vehicle';\r\nimport './Planet.css'\r\nimport {connect} from 'react-redux'\r\nimport {addQuantity,subQuantity,updateTime} from '../actions/actionCreator'\r\n\r\nconst MAX_VEHICLES = 4;\r\n\r\nclass Planet extends Component {\r\n\r\n\r\n    constructor(props){\r\n\r\n          super(props);\r\n          this.state = {\r\n                id:0,\r\n                distance:0,\r\n                time:0,\r\n                selected_planet:-1,\r\n                selected_vehicle:-1\r\n          }\r\n    }\r\n\r\n   \r\n    componentWillMount(){\r\n        this.setState({id:this.props.id})\r\n    }\r\n     \r\n    updateVehicle = (cur_vehicle)=>{\r\n                const time            = cur_vehicle!==-1 ? (this.state.distance/this.props.vehicles[cur_vehicle].speed) : 0;\r\n                const prev_vehicle    = this.state.selected_vehicle;\r\n                if(prev_vehicle!==-1){\r\n                    this.props.addQuantity(prev_vehicle,'vehicle');\r\n                    this.props.updateTime(-this.state.time);\r\n                }\r\n                if(cur_vehicle!==-1){\r\n                    this.props.subQuantity(cur_vehicle,'vehicle');\r\n                    this.props.updateTime(time)\r\n                }\r\n                \r\n                this.setState({selected_vehicle:cur_vehicle,time:time})\r\n    } \r\n        \r\n     changeHandler = (event)=>{\r\n                \r\n                const cur_planet  = parseInt(event.target.value);\r\n                const distance = cur_planet!==-1? this.props.planets[cur_planet].distance:0;       \r\n                const prev_planet = this.state.selected_planet;\r\n                if(prev_planet!==-1){\r\n                    this.props.addQuantity(prev_planet,'planet');\r\n                }\r\n                if(cur_planet!==-1){\r\n                    this.props.subQuantity(cur_planet,'planet');\r\n                }\r\n                this.props.addQuantity(this.state.selected_vehicle,'vehicle');\r\n                this.props.updateTime(-this.state.time)\r\n                this.setState((prevState)=>{\r\n                    return {\r\n                        id:prevState.id+MAX_VEHICLES, // for any change in planets update key for re render vehicles\r\n                        selected_vehicle:-1,        \r\n                        time:0,\r\n                        selected_planet:cur_planet,\r\n                        distance:distance\r\n\r\n                    }\r\n               })\r\n               \r\n        }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        \r\n        \r\n        const planets = this.props.planets?this.props.planets.map((planet,index)=>{\r\n                         let id = \"\"+index;\r\n                        if(!planet.selected || this.state.selected_planet==id){\r\n                           return <option key={id} value={id}>{planet.name} </option>\r\n                        }\r\n                        \r\n        }):null;\r\n        \r\n        \r\n\r\n        return (\r\n            <div>\r\n                <select  onChange={this.changeHandler} value={''+this.state.selected_planet}>\r\n                    <option value='-1'>Select</option>\r\n                     {planets} \r\n                </select>\r\n                { this.state.selected_planet!==-1?\r\n                  <Vehicle id={this.state.id} key={this.state.id} vehicles={this.props.vehicles} updateVehicle={this.updateVehicle} distance={this.state.distance}/>:null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps)=>{\r\n    \r\n    return {\r\n        vehicles:state.vehicles,\r\n        planets:state.planets,\r\n        id:ownProps.id\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\r\n    return {\r\n        addQuantity:(index,type)=>{\r\n            dispatch(addQuantity(index,type))\r\n        },\r\n        subQuantity:(index,type)=>{\r\n            dispatch(subQuantity(index,type))\r\n        },\r\n        updateTime:(val)=>{\r\n            dispatch(updateTime(val));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Planet);","import React, { Component } from 'react'\r\nimport './Home.css'\r\nimport Planet from '../planet/Planet';\r\nimport {connect} from 'react-redux'\r\nimport {findfalcone} from '../actions/actionCreator'\r\nimport {token_url,find_url} from '../production'\r\n\r\n\r\nconst MAX_PLANETS = 4;\r\n\r\nexport class Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\nPlanets_Selected(){  // to active and disable find button\r\n    let count = 0;\r\n    this.props.store.vehicles.forEach((vehicle)=>{  // if  vehicle is selected than planet must be selected\r\n            count = count + vehicle.selected;\r\n    })\r\n    return count==MAX_PLANETS;\r\n\r\n}\r\n\r\nfindFalcone = ()=>{\r\n    let planet_names  = []\r\n    let vehicle_names = []\r\n    this.props.store.planets.forEach((planet)=>{\r\n        if(planet.selected){\r\n            planet_names.push(planet.name)\r\n        }\r\n    })\r\n    this.props.store.vehicles.forEach((vehicle)=>{\r\n        if(vehicle.selected>0){\r\n            let count = vehicle.selected;\r\n            while(count>0){\r\n                vehicle_names.push(vehicle.name)\r\n                count--;\r\n            }\r\n        }\r\n    })\r\n    const body = {\r\n        token:'',\r\n        planet_names:planet_names,\r\n        vehicle_names:vehicle_names\r\n    }\r\n    this.props.findfalcone(token_url,find_url,body);\r\n    \r\n\r\n}\r\n\r\n    render() {\r\n\r\n        let planets = [];\r\n\r\n        for(let id=1;id<=MAX_PLANETS;id++){\r\n             \r\n            const key = id ; \r\n\r\n            planets.push(\r\n\r\n                <div className=\"w-20\" key={key}>\r\n                    <b className=\"text_bold\">Destination {id}</b>\r\n                    <Planet id={key} />\r\n                </div>\r\n\r\n          )\r\n          \r\n        }\r\n        \r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <center>\r\n                        <h3 className=\"py-5\">Select planets you want to search in</h3>\r\n                    </center>\r\n                    <div className=\"row\">\r\n                            {planets}\r\n                        <div className=\"w-20\">\r\n                            <b className=\"text_bold stick_right\">Time taken</b><br/>\r\n                            <span className=\"badge badge-pill badge-primary btn stick_right\">{this.props.store.time}</span>\r\n                        </div>\r\n                    </div>\r\n                    <center className=\"my-5\">\r\n                        <button className=\"btn badge badge-pill badge-primary\" onClick={this.findFalcone} disabled={this.Planets_Selected()?false:true}>Find</button><br/>\r\n                    </center>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    \r\n    return {\r\n        store:state,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\r\n    return {\r\n        findfalcone:(token_url,find_url,data)=>{\r\n              dispatch(findfalcone(token_url,find_url,data))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import React, { Component } from 'react'\r\n\r\nexport default class GameOver extends Component {\r\n\r\n    render() {\r\n        // contents to show show after find button pressed \r\n        const {status,time} = this.props.store\r\n\r\n        const planet_name = status=='success'?<p>Planet found : {this.props.store.planet_name}</p>:null;\r\n        return (\r\n            <div>\r\n                <center>\r\n                    <p>{status=='success'?'Success ! Congratulation Mission complete':'Oops ! Better Luck Next Time'}</p>\r\n                    <p>Time taken : {time}</p>\r\n                    { status=='success'?planet_name:null }\r\n                    <p>\r\n                    <button className=\"btn badge badge-pill badge-primary\" onClick={this.props.reset}>Play Again</button><br/>\r\n                    </p>\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Error extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <center>\r\n                    <h1>Error :( </h1>\r\n                    <p>{this.props.message}</p>\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <center>\r\n                    <h3>{this.props.message}...</h3>\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Navbar.css'\r\n\r\nexport default class Navbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n                \r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"https://www.geektrust.in\">GeekTrust </a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item active\">\r\n                  <a className=\"nav-link navbar-brand\" href=\"#\" onClick={this.props.reset}> Reset <span className=\"sr-only\">(current)</span></a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Footer.css'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"col-sm-12 last\">\r\n                    <div className=\"container\">\r\n                            <div className=\"col-sm-12 footer\">\r\n                                <span> Coding Problem  - www.geektrust.in/finding-falcone </span>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Home from '../home/Home';\r\nimport {connect} from 'react-redux'\r\nimport {reset} from '../actions/actionCreator'\r\nimport GameOver from '../GameOver';\r\nimport Error from '../Error';\r\nimport Loading from '../Loading';\r\nimport Navbar from '../navbar/Navbar';\r\nimport Footer from '../footer/Footer';\r\n\r\n\r\nclass Root extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        id:1           // for re render the planet component when reset() is called\r\n    }\r\n}\r\n\r\nreset = ()=>{\r\nthis.props.reset();\r\nthis.setState((prevState)=>{\r\n     return {\r\n         id:prevState.id+1\r\n     }\r\n})\r\n}\r\n\r\ncomponentWillMount(){\r\n     this.props.reset();\r\n}\r\n\r\nisgameOver = ()=>{\r\n    if(this.props.store.status=='success' || this.props.store.status=='false'){\r\n       return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nisLoading = ()=>{\r\n  const {status} = this.props.store;\r\n  return (status=='Loading' || status=='Searching')\r\n}\r\n\r\nisError = ()=>{\r\n    console.log(this.props.store.error)\r\n    return this.props.store.error.trim().length>0;\r\n}\r\n\r\nrender() {\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar reset={this.reset}/>\r\n            <div className=\"container-fluid\">\r\n                <center>\r\n                    <h1 className=\"my-3\">Finding Falcone!</h1>\r\n                </center>\r\n                 {this.isLoading()?<Loading message={this.props.store.status}/>:null}\r\n                 {this.isgameOver() ?<GameOver  reset = {this.reset} store={this.props.store} />:null}\r\n                 {this.isError()?<Error  message={this.props.store.error}/>:null}\r\n                 {!this.isgameOver() && !this.isError() && !this.isLoading()?<Home key={this.state.id} />:null}\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n\r\n    return {\r\n        store:state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\r\n  return {\r\n      reset:()=>{\r\n          dispatch(reset())\r\n      }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Root);\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport Root from './components/root/Root'\r\n\r\nfunction App() {\r\n  return (\r\n      <Root />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {UPDATE_TIME,ADD_QUANTITY,SUB_QUANTITY,PENDING,FULFILLED,ERROR,SEARCHED,SEARCHING} from '../actions/actionType'\r\n\r\n\r\nconst initState = {\r\n    vehicles:[],\r\n    planets:[],\r\n    time:0,\r\n    status:'',\r\n    error:''\r\n}\r\n\r\n\r\nconst appReducer =  (state=initState, action)=>{\r\n\r\n    if(action.type===ADD_QUANTITY){\r\n        //   console.log(\"ADD : \",action.payload)\r\n        if(action.payload.index<0){\r\n            return {...state};\r\n        }\r\n        if(action.payload.type==='vehicle'){\r\n            return updateVehicle(action.payload.index,1,state);\r\n        }\r\n        if(action.payload.type==='planet'){\r\n            return updatePlanet(action.payload.index,false,state);\r\n        }\r\n\r\n    }\r\n    if(action.type===SUB_QUANTITY){\r\n        // console.log(\"SUB : \",action.payload)\r\n        if(action.payload.index<0){\r\n            return {...state};\r\n        }\r\n        if(action.payload.type==='vehicle'){\r\n            return updateVehicle(action.payload.index,-1,state);\r\n        }\r\n        if(action.payload.type==='planet'){\r\n            return updatePlanet(action.payload.index,true,state);\r\n        }\r\n        \r\n    }\r\n    if(action.type===UPDATE_TIME){\r\n        const new_time = state.time + action.payload.time;\r\n              return {\r\n                  ...state,\r\n                  time: new_time\r\n              }\r\n    }\r\n    if(action.type===PENDING || action.type===ERROR || action.type===FULFILLED || action.type===SEARCHING || action.type===SEARCHED){\r\n        return {\r\n            ...state,\r\n            ...action.payload\r\n        }\r\n    }\r\n    \r\n    return {...state};\r\n\r\n}\r\n\r\nfunction updateVehicle(index,increment_by,prevState){\r\n        let prev_quantity = prevState.vehicles[index].total_no;\r\n        let new_quantity  = (prev_quantity + increment_by) >=0 ? prev_quantity + increment_by : prev_quantity;\r\n        let vehicles = [...prevState.vehicles];\r\n        vehicles[index].total_no = new_quantity;\r\n        vehicles[index].selected = vehicles[index].selected-(new_quantity-prev_quantity);\r\n        return {\r\n                ...prevState,\r\n                vehicles\r\n        }   \r\n\r\n}\r\n\r\nfunction updatePlanet(index,selected,prevState){\r\n            let planets = [...prevState.planets];\r\n            planets[index].selected = selected;\r\n            return {\r\n                    ...prevState,\r\n                    planets\r\n          }\r\n}\r\n\r\n\r\nexport default appReducer;\r\n","import {createStore,applyMiddleware} from 'redux'\r\nimport { default as thunk } from 'redux-thunk';\r\nimport appReducer from './components/reducers/appReducer'\r\nconst middleware = [thunk]\r\nexport default createStore(\r\n                appReducer,\r\n                applyMiddleware(...middleware)\r\n            );","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store'\r\nimport {Provider} from 'react-redux' \r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}